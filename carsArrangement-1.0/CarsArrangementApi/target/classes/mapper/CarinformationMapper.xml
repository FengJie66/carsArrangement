<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.CarinformationMapper">

    <resultMap id="BaseResultMap" type="com.example.pojo.Carinformation">
            <id property="carid" column="carId" jdbcType="VARCHAR"/>
            <result property="carbrand" column="carBrand" jdbcType="VARCHAR"/>
            <result property="cartype" column="carType" jdbcType="VARCHAR"/>
            <result property="speed" column="speed" jdbcType="FLOAT"/>
            <result property="runsnumber" column="runsnumber" jdbcType="VARCHAR"/>
            <result property="tyrepressure" column="tyrepressure" jdbcType="VARCHAR"/>
            <result property="seat" column="seat" jdbcType="VARCHAR"/>
            <result property="usetime" column="usetime" jdbcType="VARCHAR"/>
            <result property="coverimagefilename" column="coverimagefilename" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        carId,carBrand,carType,
        speed,runsnumber,tyrepressure,
        seat,usetime,coverimagefilename
    </sql>
    <insert id="save">
        insert into carinformation values(#{car.carid},#{car.carbrand},#{car.cartype},
                                          #{car.speed},#{car.runsnumber},#{car.tyrepressure},
                                          #{car.seat},#{car.usetime},#{car.coverimagefilename})
    </insert>
    <update id="updateById">
        update carinformation set carBrand = #{car.carbrand},carType = #{car.cartype},
                                  speed = #{car.speed},runsnumber = #{car.runsnumber},tyrepressure =#{car.tyrepressure},
                                  seat = #{car.seat},usetime = #{car.usetime},coverimagefilename = #{car.coverimagefilename}  where carId = #{car.carid}
    </update>
    <delete id="delById">
        delete from carinformation where carId = #{id}
    </delete>
    <select id="isExist" resultType="java.lang.Long">
        select count(carId) from carinformation where carBrand = #{carbrand} and carType = #{cartype}
        <if test="carid != null and carid != ''">
            and carId != #{carid}
        </if>
    </select>
    <select id="count" resultType="java.lang.Long">
        select count(carId) from carinformation
        <where>
            <if test="search != null and search != ''">
                carBrand like '%${search}%' or carType like '%${search}%'
            </if>
        </where>
    </select>
    <select id="getRecords" resultMap="BaseResultMap">
        select * from carinformation
        <where>
            <if test="search != null and search != ''">
                carBrand like '%${search}%' or carType like '%${search}%'
            </if>
        </where>
        limit #{page.current},#{page.size}
    </select>
</mapper>
